<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODSURBVEhLpdZrTFJhGAdwP9eHbNVWa66tddHNyi5ozS/d
        HEKlXUQtM+hqVqZposhYpRVDKi+zpqaBRtqNyMjKsui2rFzmBKKUcjqpdOGxjFKB/p3jwCQlhZ7t3fny
        vs9zzu88z9nxcDVeS0I9taWMtdpS+pHhlvo8fSm1x7Z99KGRMP3UUrribflqtFVHg3gZix5tAsxvD8Ci
        joVZuwemxjQYXySj9UYEqL3UGdvxkUN3gU4YHm2FpVME/FQAJjnQLkLvez66NUmwfuABzeRqzQK+VsOk
        4aOhiE7Yjo8cLdfCgM+5sHRfgrnzHLkk6Pl0Br0tGUCHCNbWQzA3JcPamAirLg6/dPtxJc0ftuMjB1XA
        +pwNS5sM1q5bQGcprAYxvpN3b9Fz0d2QhL6mw7A0n0bH3S1QF/q5XsCkioCZStRyBj/1BTDVHgbxOAn6
        a1GoEgfiPG8OShImQymYgurj3i4WuLwG7ZWR6Li3HcbnfBhrDoK4HQLDhYV4KJyOvJ0TkBExHmK2F3J3
        +6IkOcCxwL/ar6l81ekPhYvRJw9E1/VQfL65A5oSFmqlLDyThuNWTgjKMpg4mxaKB6UpqCkM+UPkavs1
        XwxGWwUL72RhqBEvx9OsELy7ssk5kU7mevuppcGoz1uKJwIfXI2ZgrPsic6J3G2/l9lBUPD8kcPxRkb4
        DOdE7rafroyFF9l03OQthmyvr3Mid9uPotJIg/qJsjZ44mT0eCdEChbnU2UEMer24y6BnnzJdiohyZPM
        nIb0SB/kc1ehsiDekcgebWSHmB5FwXBnJ94oU6HMZOBc6jKUHWOQtitwVciE9kbMEKq6otW4Tl5PRU1D
        UYKP80H7H6r64pVIXD4GgnXjHIjkgoBBBf6DikrEXzcLoh1L+olUuQy8ypvr+ATUwGllDJVB+YeqQR43
        QCURBA1Q1V3ahh+6bAcqiki82QvFeyYNT2QfOHepKKL4FWMh3DTVCZFt4L41CtFexR71R60gbhGZ1Bvc
        NTNwNHoRLorYwxMNHjiLUYkefS6+16XiY/V21MnCB6jyU5g4EUND/v45kCTSUMGl9Q+anago1gmRuzT2
        QfubKH8fjShPoXFs6V3vIipBRXogUZzgj8ytfkjZMJuIY8xU8SPnSzK3LeBkxc8b+mdBKNieX6rYHON9
        juS9fKOqpmA9YacR7gogeBvn/zvBkPDw+A2PSOC40jRQ4wAAAABJRU5ErkJggg==
</value>
  </data>
</root>